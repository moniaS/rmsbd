CREATE TABLE Skladniki (
	ID NUMBER(10) NOT NULL  PRIMARY KEY,
	Nazwa VARCHAR2(50 CHAR) NOT NULL,
	Ilosc_na_stanie BINARY_DOUBLE NOT NULL,
	Jednostka VARCHAR2(5 CHAR) NOT NULL
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE Skladniki_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Skladniki_seq_tr
 BEFORE INSERT ON Skladniki FOR EACH ROW
 WHEN (NEW.ID IS NULL)
BEGIN
 SELECT Skladniki_seq.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TABLE Skladniki
ADD CHECK (Ilosc_na_stanie >= 0 AND LENGTHB(Nazwa) > 3);

CREATE TABLE Dostawcy (
	ID NUMBER(10) NOT NULL  PRIMARY KEY,
	Nazwa VARCHAR2(50 CHAR) NOT NULL,
	Miasto VARCHAR2(50 CHAR) NOT NULL,
	Adres VARCHAR2(50 CHAR) NOT NULL
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE Dostawcy_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Dostawcy_seq_tr
 BEFORE INSERT ON Dostawcy FOR EACH ROW
 WHEN (NEW.ID IS NULL)
BEGIN
 SELECT Dostawcy_seq.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TABLE Dostawcy
ADD CHECK (LENGTHB(Nazwa) > 3 AND LENGTHB(Miasto) > 4);

CREATE TABLE Dostawcy_Skladniki (
	ID_dostawcy NUMBER(10) NOT NULL,
	ID_skladnika NUMBER(10) NOT NULL,
	Cena BINARY_DOUBLE NOT NULL,
	CONSTRAINT DS1 PRIMARY KEY (ID_dostawcy, ID_skladnika),
	CONSTRAINT DS2 FOREIGN KEY (ID_dostawcy) REFERENCES Dostawcy (ID),
	CONSTRAINT DS3 FOREIGN KEY (ID_skladnika) REFERENCES Skladniki (ID)
);
ALTER TABLE Dostawcy_Skladniki
ADD CHECK (Cena > 0);

CREATE TABLE Dostawy (
	ID NUMBER(10) NOT NULL  PRIMARY KEY,
	ID_dostawcy NUMBER(10) NOT NULL,
	ID_skladnika NUMBER(10) NOT NULL,
	Data_dostawy DATE DEFAULT SYSDATE NOT NULL,
	Ilosc BINARY_DOUBLE NOT NULL,
	CONSTRAINT D2 FOREIGN KEY (ID_dostawcy) REFERENCES Dostawcy (ID),
	CONSTRAINT D3 FOREIGN KEY (ID_skladnika) REFERENCES Skladniki (ID)
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE Dostawy_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Dostawy_seq_tr
 BEFORE INSERT ON Dostawy FOR EACH ROW
 WHEN (NEW.ID IS NULL)
BEGIN
 SELECT Dostawy_seq.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TABLE Dostawy
ADD CHECK (Ilosc > 0);

CREATE TABLE Dania (
	ID NUMBER(10) NOT NULL  PRIMARY KEY,
	Nazwa VARCHAR2(50 CHAR) NOT NULL,
	Opis VARCHAR2(255 CHAR) NOT NULL,
	Cena BINARY_DOUBLE NOT NULL,
	Czas_przygotowania INTERVAL DAY TO SECOND NOT NULL
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE Dania_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Dania_seq_tr
 BEFORE INSERT ON Dania FOR EACH ROW
 WHEN (NEW.ID IS NULL)
BEGIN
 SELECT Dania_seq.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TABLE Dania
ADD CHECK ((Cena > 0) AND (LENGTHB(Nazwa) > 5));

CREATE TABLE Dania_Skladniki (
	ID_dania NUMBER(10) NOT NULL,
	ID_skladnika NUMBER(10) NOT NULL,
	Ilosc BINARY_DOUBLE NOT NULL,
	CONSTRAINT DaS1 PRIMARY KEY (ID_dania, ID_skladnika),
	CONSTRAINT DaS2	FOREIGN KEY (ID_dania) REFERENCES Dania (ID),
	CONSTRAINT DaS3 FOREIGN KEY (ID_skladnika) REFERENCES Skladniki (ID)
);
ALTER TABLE Dania_Skladniki
ADD CHECK (Ilosc >= 0);

CREATE TABLE Klienci (
	ID NUMBER(10) NOT NULL  PRIMARY KEY,
	Imie VARCHAR2(50 CHAR) NOT NULL,
	Nazwisko VARCHAR2(50 CHAR) NOT NULL,
	Data_urodzenia DATE,
	Kontakt VARCHAR2(50 CHAR) NOT NULL,
	Czy_staly_klient NUMBER(1) DEFAULT 0 NOT NULL
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE Klienci_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Klienci_seq_tr
 BEFORE INSERT ON Klienci FOR EACH ROW
 WHEN (NEW.ID IS NULL)
BEGIN
 SELECT Klienci_seq.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/

CREATE TABLE Zamowienia (
	ID NUMBER(10) NOT NULL  PRIMARY KEY,
	Data_zamowienia DATE DEFAULT SYSDATE NOT NULL,
	ID_Klienta NUMBER(10) NOT NULL,
	Cena BINARY_DOUBLE NOT NULL,
	CONSTRAINT ZamKl FOREIGN KEY (ID_Klienta) REFERENCES Klienci (ID)
);

-- Generate ID using sequence and trigger
CREATE SEQUENCE Zamowienia_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Zamowienia_seq_tr
 BEFORE INSERT ON Zamowienia FOR EACH ROW
 WHEN (NEW.ID IS NULL)
BEGIN
 SELECT Zamowienia_seq.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/

CREATE TABLE Zamowienia_Dania (
	ID_Zamowienia NUMBER(10) NOT NULL,
	ID_Dania NUMBER(10) NOT NULL,
	Liczba NUMBER(10) NOT NULL,
	CONSTRAINT ZD1 PRIMARY KEY (ID_zamowienia, ID_dania),
	CONSTRAINT ZD2 FOREIGN KEY (ID_dania) REFERENCES Dania (ID),
	CONSTRAINT ZD3 FOREIGN KEY (ID_zamowienia) REFERENCES Zamowienia (ID)
);
ALTER TABLE Zamowienia_Dania
ADD CHECK (Liczba > 0);
